// Generated from WDTPD.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'https://cdn.jsdelivr.net/npm/antlr4@4.13.1/+esm'


const serializedATN = [4,0,58,406,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,
41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,
2,49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
56,7,56,2,57,7,57,2,58,7,58,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,
1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,
1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
1,22,1,22,5,22,181,8,22,10,22,12,22,184,9,22,1,22,1,22,1,23,1,23,5,23,190,
8,23,10,23,12,23,193,9,23,1,23,1,23,1,24,1,24,5,24,199,8,24,10,24,12,24,
202,9,24,1,24,1,24,1,25,1,25,5,25,208,8,25,10,25,12,25,211,9,25,1,25,1,25,
1,26,1,26,1,27,1,27,5,27,219,8,27,10,27,12,27,222,9,27,1,27,1,27,1,28,1,
28,1,29,1,29,5,29,230,8,29,10,29,12,29,233,9,29,1,29,1,29,1,30,1,30,1,31,
1,31,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,
36,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,40,1,40,
1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,
42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,
1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,
48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
1,49,1,49,3,49,329,8,49,1,50,1,50,5,50,333,8,50,10,50,12,50,336,9,50,1,51,
1,51,5,51,340,8,51,10,51,12,51,343,9,51,1,51,1,51,1,51,5,51,348,8,51,10,
51,12,51,351,9,51,1,51,3,51,354,8,51,1,52,4,52,357,8,52,11,52,12,52,358,
1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,3,53,370,8,53,1,54,1,54,1,54,
1,54,1,54,1,54,1,54,1,54,3,54,380,8,54,1,55,1,55,1,55,1,55,5,55,386,8,55,
10,55,12,55,389,9,55,1,55,1,55,1,56,1,56,1,57,4,57,396,8,57,11,57,12,57,
397,1,57,1,57,1,58,3,58,403,8,58,1,58,1,58,0,0,59,1,1,3,2,5,3,7,4,9,5,11,
6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,
19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,
31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,
43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,
109,55,111,56,113,0,115,57,117,58,1,0,26,2,0,79,79,111,111,2,0,85,85,117,
117,2,0,84,84,116,116,2,0,80,80,112,112,2,0,69,69,101,101,2,0,76,76,108,
108,2,0,83,83,115,115,2,0,94,94,8593,8593,2,0,65,65,97,97,2,0,66,66,98,98,
2,0,78,78,110,110,2,0,81,81,113,113,2,0,82,82,114,114,2,0,73,73,105,105,
2,0,70,70,102,102,2,0,72,72,104,104,2,0,68,68,100,100,2,0,87,87,119,119,
2,0,88,88,120,120,2,0,65,90,97,122,3,0,48,57,65,90,97,122,1,0,34,34,1,0,
39,39,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,421,0,1,1,0,0,0,0,3,1,0,0,
0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,
0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,
61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,
0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,
1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,
0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,115,1,0,0,0,0,117,1,
0,0,0,1,119,1,0,0,0,3,126,1,0,0,0,5,131,1,0,0,0,7,134,1,0,0,0,9,137,1,0,
0,0,11,140,1,0,0,0,13,143,1,0,0,0,15,146,1,0,0,0,17,149,1,0,0,0,19,151,1,
0,0,0,21,153,1,0,0,0,23,156,1,0,0,0,25,158,1,0,0,0,27,160,1,0,0,0,29,162,
1,0,0,0,31,164,1,0,0,0,33,166,1,0,0,0,35,168,1,0,0,0,37,170,1,0,0,0,39,172,
1,0,0,0,41,174,1,0,0,0,43,176,1,0,0,0,45,178,1,0,0,0,47,187,1,0,0,0,49,196,
1,0,0,0,51,205,1,0,0,0,53,214,1,0,0,0,55,216,1,0,0,0,57,225,1,0,0,0,59,227,
1,0,0,0,61,236,1,0,0,0,63,238,1,0,0,0,65,240,1,0,0,0,67,242,1,0,0,0,69,244,
1,0,0,0,71,246,1,0,0,0,73,250,1,0,0,0,75,254,1,0,0,0,77,259,1,0,0,0,79,263,
1,0,0,0,81,266,1,0,0,0,83,271,1,0,0,0,85,278,1,0,0,0,87,284,1,0,0,0,89,294,
1,0,0,0,91,298,1,0,0,0,93,301,1,0,0,0,95,306,1,0,0,0,97,311,1,0,0,0,99,328,
1,0,0,0,101,330,1,0,0,0,103,353,1,0,0,0,105,356,1,0,0,0,107,369,1,0,0,0,
109,379,1,0,0,0,111,381,1,0,0,0,113,392,1,0,0,0,115,395,1,0,0,0,117,402,
1,0,0,0,119,120,7,0,0,0,120,121,7,1,0,0,121,122,7,2,0,0,122,123,7,3,0,0,
123,124,7,1,0,0,124,125,7,2,0,0,125,2,1,0,0,0,126,127,7,4,0,0,127,128,7,
5,0,0,128,129,7,6,0,0,129,130,7,4,0,0,130,4,1,0,0,0,131,132,5,124,0,0,132,
133,5,124,0,0,133,6,1,0,0,0,134,135,5,38,0,0,135,136,5,38,0,0,136,8,1,0,
0,0,137,138,5,61,0,0,138,139,5,61,0,0,139,10,1,0,0,0,140,141,5,33,0,0,141,
142,5,61,0,0,142,12,1,0,0,0,143,144,5,62,0,0,144,145,5,61,0,0,145,14,1,0,
0,0,146,147,5,60,0,0,147,148,5,61,0,0,148,16,1,0,0,0,149,150,5,94,0,0,150,
18,1,0,0,0,151,152,5,8593,0,0,152,20,1,0,0,0,153,154,5,42,0,0,154,155,5,
42,0,0,155,22,1,0,0,0,156,157,5,61,0,0,157,24,1,0,0,0,158,159,5,44,0,0,159,
26,1,0,0,0,160,161,5,33,0,0,161,28,1,0,0,0,162,163,7,7,0,0,163,30,1,0,0,
0,164,165,5,42,0,0,165,32,1,0,0,0,166,167,5,47,0,0,167,34,1,0,0,0,168,169,
5,37,0,0,169,36,1,0,0,0,170,171,5,43,0,0,171,38,1,0,0,0,172,173,5,45,0,0,
173,40,1,0,0,0,174,175,5,60,0,0,175,42,1,0,0,0,176,177,5,62,0,0,177,44,1,
0,0,0,178,182,3,41,20,0,179,181,3,113,56,0,180,179,1,0,0,0,181,184,1,0,0,
0,182,180,1,0,0,0,182,183,1,0,0,0,183,185,1,0,0,0,184,182,1,0,0,0,185,186,
3,23,11,0,186,46,1,0,0,0,187,191,5,62,0,0,188,190,3,113,56,0,189,188,1,0,
0,0,190,193,1,0,0,0,191,189,1,0,0,0,191,192,1,0,0,0,192,194,1,0,0,0,193,
191,1,0,0,0,194,195,5,61,0,0,195,48,1,0,0,0,196,200,3,23,11,0,197,199,3,
113,56,0,198,197,1,0,0,0,199,202,1,0,0,0,200,198,1,0,0,0,200,201,1,0,0,0,
201,203,1,0,0,0,202,200,1,0,0,0,203,204,3,23,11,0,204,50,1,0,0,0,205,209,
5,33,0,0,206,208,3,113,56,0,207,206,1,0,0,0,208,211,1,0,0,0,209,207,1,0,
0,0,209,210,1,0,0,0,210,212,1,0,0,0,211,209,1,0,0,0,212,213,3,23,11,0,213,
52,1,0,0,0,214,215,5,38,0,0,215,54,1,0,0,0,216,220,3,53,26,0,217,219,3,113,
56,0,218,217,1,0,0,0,219,222,1,0,0,0,220,218,1,0,0,0,220,221,1,0,0,0,221,
223,1,0,0,0,222,220,1,0,0,0,223,224,3,53,26,0,224,56,1,0,0,0,225,226,5,124,
0,0,226,58,1,0,0,0,227,231,3,57,28,0,228,230,3,113,56,0,229,228,1,0,0,0,
230,233,1,0,0,0,231,229,1,0,0,0,231,232,1,0,0,0,232,234,1,0,0,0,233,231,
1,0,0,0,234,235,3,57,28,0,235,60,1,0,0,0,236,237,5,58,0,0,237,62,1,0,0,0,
238,239,5,40,0,0,239,64,1,0,0,0,240,241,5,41,0,0,241,66,1,0,0,0,242,243,
5,91,0,0,243,68,1,0,0,0,244,245,5,93,0,0,245,70,1,0,0,0,246,247,7,8,0,0,
247,248,7,9,0,0,248,249,7,6,0,0,249,72,1,0,0,0,250,251,7,5,0,0,251,252,7,
4,0,0,252,253,7,10,0,0,253,74,1,0,0,0,254,255,7,6,0,0,255,256,7,11,0,0,256,
257,7,12,0,0,257,258,7,2,0,0,258,76,1,0,0,0,259,260,7,13,0,0,260,261,7,10,
0,0,261,262,7,2,0,0,262,78,1,0,0,0,263,264,7,13,0,0,264,265,7,14,0,0,265,
80,1,0,0,0,266,267,7,2,0,0,267,268,7,15,0,0,268,269,7,4,0,0,269,270,7,10,
0,0,270,82,1,0,0,0,271,272,7,4,0,0,272,273,7,10,0,0,273,274,7,16,0,0,274,
275,5,32,0,0,275,276,7,13,0,0,276,277,7,14,0,0,277,84,1,0,0,0,278,279,7,
17,0,0,279,280,7,15,0,0,280,281,7,13,0,0,281,282,7,5,0,0,282,283,7,4,0,0,
283,86,1,0,0,0,284,285,7,4,0,0,285,286,7,10,0,0,286,287,7,16,0,0,287,288,
5,32,0,0,288,289,7,17,0,0,289,290,7,15,0,0,290,291,7,13,0,0,291,292,7,5,
0,0,292,293,7,4,0,0,293,88,1,0,0,0,294,295,7,14,0,0,295,296,7,0,0,0,296,
297,7,12,0,0,297,90,1,0,0,0,298,299,7,2,0,0,299,300,7,0,0,0,300,92,1,0,0,
0,301,302,7,6,0,0,302,303,7,2,0,0,303,304,7,4,0,0,304,305,7,3,0,0,305,94,
1,0,0,0,306,307,7,10,0,0,307,308,7,4,0,0,308,309,7,18,0,0,309,310,7,2,0,
0,310,96,1,0,0,0,311,312,7,13,0,0,312,313,7,10,0,0,313,314,7,3,0,0,314,315,
7,1,0,0,315,316,7,2,0,0,316,98,1,0,0,0,317,318,7,0,0,0,318,319,7,1,0,0,319,
320,7,2,0,0,320,321,7,3,0,0,321,322,7,1,0,0,322,329,7,2,0,0,323,324,7,3,
0,0,324,325,7,12,0,0,325,326,7,13,0,0,326,327,7,10,0,0,327,329,7,2,0,0,328,
317,1,0,0,0,328,323,1,0,0,0,329,100,1,0,0,0,330,334,7,19,0,0,331,333,7,20,
0,0,332,331,1,0,0,0,333,336,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,0,335,
102,1,0,0,0,336,334,1,0,0,0,337,341,5,34,0,0,338,340,8,21,0,0,339,338,1,
0,0,0,340,343,1,0,0,0,341,339,1,0,0,0,341,342,1,0,0,0,342,344,1,0,0,0,343,
341,1,0,0,0,344,354,5,34,0,0,345,349,5,39,0,0,346,348,8,22,0,0,347,346,1,
0,0,0,348,351,1,0,0,0,349,347,1,0,0,0,349,350,1,0,0,0,350,352,1,0,0,0,351,
349,1,0,0,0,352,354,5,39,0,0,353,337,1,0,0,0,353,345,1,0,0,0,354,104,1,0,
0,0,355,357,7,23,0,0,356,355,1,0,0,0,357,358,1,0,0,0,358,356,1,0,0,0,358,
359,1,0,0,0,359,106,1,0,0,0,360,361,7,14,0,0,361,362,7,8,0,0,362,363,7,5,
0,0,363,364,7,6,0,0,364,370,7,4,0,0,365,366,7,2,0,0,366,367,7,12,0,0,367,
368,7,1,0,0,368,370,7,4,0,0,369,360,1,0,0,0,369,365,1,0,0,0,370,108,1,0,
0,0,371,372,7,10,0,0,372,373,7,1,0,0,373,374,7,5,0,0,374,380,7,5,0,0,375,
376,7,10,0,0,376,377,7,0,0,0,377,378,7,10,0,0,378,380,7,4,0,0,379,371,1,
0,0,0,379,375,1,0,0,0,380,110,1,0,0,0,381,382,5,47,0,0,382,383,5,47,0,0,
383,387,1,0,0,0,384,386,8,24,0,0,385,384,1,0,0,0,386,389,1,0,0,0,387,385,
1,0,0,0,387,388,1,0,0,0,388,390,1,0,0,0,389,387,1,0,0,0,390,391,6,55,0,0,
391,112,1,0,0,0,392,393,7,25,0,0,393,114,1,0,0,0,394,396,3,113,56,0,395,
394,1,0,0,0,396,397,1,0,0,0,397,395,1,0,0,0,397,398,1,0,0,0,398,399,1,0,
0,0,399,400,6,57,0,0,400,116,1,0,0,0,401,403,5,13,0,0,402,401,1,0,0,0,402,
403,1,0,0,0,403,404,1,0,0,0,404,405,5,10,0,0,405,118,1,0,0,0,18,0,182,191,
200,209,220,231,328,334,341,349,353,358,369,379,387,397,402,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class WDTPDLexer extends antlr4.Lexer {

    static grammarFileName = "WDTPD.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'OUTPUT'", "'ELSE'", "'||'", "'&&'", "'=='", 
                         "'!='", "'>='", "'<='", "'^'", "'\\u2191'", "'**'", 
                         "'='", "','", "'!'", null, "'*'", "'/'", "'%'", 
                         "'+'", "'-'", "'<'", "'>'", null, null, null, null, 
                         "'&'", null, "'|'", null, "':'", "'('", "')'", 
                         "'['", "']'", "'abs'", "'len'", "'sqrt'", "'int'", 
                         "'IF'", "'THEN'", "'END IF'", "'WHILE'", "'END WHILE'", 
                         "'FOR'", "'TO'", "'STEP'", "'NEXT'", "'INPUT'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, "EQUALS", "COMMA", "NOT", 
                          "EXPONENT", "STAR", "SLASH", "PERCENT", "PLUS", 
                          "DASH", "LT", "GT", "LTE", "GTE", "EQEQ", "DNE", 
                          "AMPERSAND", "DOUBLE_AMPERSAND", "PIPE", "DOUBLE_PIPE", 
                          "COLON", "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", 
                          "CLOSE_BRACKET", "ABS", "LEN", "SQRT", "INT_FUNC", 
                          "IF", "THEN", "END_IF", "WHILE", "END_WHILE", 
                          "FOR", "TO", "STEP", "NEXT", "INPUT", "OUTPUT", 
                          "ID", "STRING", "INTEGER", "BOOLEAN", "NULL", 
                          "COMMENT", "WSSKIP", "NL" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "EQUALS", "COMMA", 
                      "NOT", "EXPONENT", "STAR", "SLASH", "PERCENT", "PLUS", 
                      "DASH", "LT", "GT", "LTE", "GTE", "EQEQ", "DNE", "AMPERSAND", 
                      "DOUBLE_AMPERSAND", "PIPE", "DOUBLE_PIPE", "COLON", 
                      "OPEN_PAREN", "CLOSE_PAREN", "OPEN_BRACKET", "CLOSE_BRACKET", 
                      "ABS", "LEN", "SQRT", "INT_FUNC", "IF", "THEN", "END_IF", 
                      "WHILE", "END_WHILE", "FOR", "TO", "STEP", "NEXT", 
                      "INPUT", "OUTPUT", "ID", "STRING", "INTEGER", "BOOLEAN", 
                      "NULL", "COMMENT", "WS", "WSSKIP", "NL" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

WDTPDLexer.EOF = antlr4.Token.EOF;
WDTPDLexer.T__0 = 1;
WDTPDLexer.T__1 = 2;
WDTPDLexer.T__2 = 3;
WDTPDLexer.T__3 = 4;
WDTPDLexer.T__4 = 5;
WDTPDLexer.T__5 = 6;
WDTPDLexer.T__6 = 7;
WDTPDLexer.T__7 = 8;
WDTPDLexer.T__8 = 9;
WDTPDLexer.T__9 = 10;
WDTPDLexer.T__10 = 11;
WDTPDLexer.EQUALS = 12;
WDTPDLexer.COMMA = 13;
WDTPDLexer.NOT = 14;
WDTPDLexer.EXPONENT = 15;
WDTPDLexer.STAR = 16;
WDTPDLexer.SLASH = 17;
WDTPDLexer.PERCENT = 18;
WDTPDLexer.PLUS = 19;
WDTPDLexer.DASH = 20;
WDTPDLexer.LT = 21;
WDTPDLexer.GT = 22;
WDTPDLexer.LTE = 23;
WDTPDLexer.GTE = 24;
WDTPDLexer.EQEQ = 25;
WDTPDLexer.DNE = 26;
WDTPDLexer.AMPERSAND = 27;
WDTPDLexer.DOUBLE_AMPERSAND = 28;
WDTPDLexer.PIPE = 29;
WDTPDLexer.DOUBLE_PIPE = 30;
WDTPDLexer.COLON = 31;
WDTPDLexer.OPEN_PAREN = 32;
WDTPDLexer.CLOSE_PAREN = 33;
WDTPDLexer.OPEN_BRACKET = 34;
WDTPDLexer.CLOSE_BRACKET = 35;
WDTPDLexer.ABS = 36;
WDTPDLexer.LEN = 37;
WDTPDLexer.SQRT = 38;
WDTPDLexer.INT_FUNC = 39;
WDTPDLexer.IF = 40;
WDTPDLexer.THEN = 41;
WDTPDLexer.END_IF = 42;
WDTPDLexer.WHILE = 43;
WDTPDLexer.END_WHILE = 44;
WDTPDLexer.FOR = 45;
WDTPDLexer.TO = 46;
WDTPDLexer.STEP = 47;
WDTPDLexer.NEXT = 48;
WDTPDLexer.INPUT = 49;
WDTPDLexer.OUTPUT = 50;
WDTPDLexer.ID = 51;
WDTPDLexer.STRING = 52;
WDTPDLexer.INTEGER = 53;
WDTPDLexer.BOOLEAN = 54;
WDTPDLexer.NULL = 55;
WDTPDLexer.COMMENT = 56;
WDTPDLexer.WSSKIP = 57;
WDTPDLexer.NL = 58;



